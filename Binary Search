Binary Search

int a[] = {12,23,4,2,34,122};
target = 34;

Binary search say take the midle number of the array

There are some steps which we have to follow 

setp 1 :- Find the midel element 

setp 2:- target > mid => search in the right else serch in the left 

setp 3:- If middle element == target 

This is my ans 

for middle  =  (1st ind + lst ind)/2

The total number of comparisons, therefore, is (n - 1) + (n - 2)...(2) + (1) = n(n - 1)/2 or O(n2)

If start > element this means element is not present 



Binary Search is a searching algorithm for finding an element's position in a sorted array.

Important  *Binary search can be implemented only on a sorted list of items. If the elements are not sorted already, we need to sort them first.

Binary Search Working

Binary Search Algorithm can be implemented in two ways which are discussed below.

Iterative Method
Recursive Method

The recursive method follows the divide and conquer approach.

https://www.programiz.com/dsa/binary-search


This is a sorted array therefore 

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;

class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!"); 
        
        int arr[] = {1,2,3,4,5,6,7,8};
        
        int target = 7;
        
        int ans = binarysearch(arr,target);
        
        System.out.println(ans);
    }
    
    
    static int binarysearch(int arr[],int target){
        int start = 0;
        int end = arr.length-1;
        
        while(start<=end){
            int mid = start + (end - start)/2;
            
            
            if(target < arr[mid]){
                end = mid - 1;
            }else if(target > arr[mid]){
                start = mid + 1;
            }else{
                return mid;
            }
        }
        return -1;
    }
}



Order Agnostic Binary Search [when we don't know it arrange in ascending order or descending order



// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {
     // int[] arr = {-18, -12, -4, 0, 2, 3, 4, 15, 16, 18, 22, 45, 89};
        int[] arr = {99, 80, 75, 22, 11, 10, 5, 2, -3};
        int target = 22;
        int ans = orderAgnosticBS(arr, target);
        System.out.println(ans);

    }
    
    static int orderAgnosticBS(int[] arr, int target) {
        int start = 0;
        int end = arr.length - 1;

        // find whether the array is sorted in ascending or descending
        boolean isAsc = arr[start] < arr[end];

        while(start <= end) {
            // find the middle element
//            int mid = (start + end) / 2; // might be possible that (start + end) exceeds the range of int in java
            int mid = (start+end)/2;

            if (arr[mid] == target) {
                return mid;
            }

            if (isAsc) {
                if (target < arr[mid]) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            } else {
                if (target > arr[mid]) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }
        }
        return -1;
    }
    
  
    
    
}
















